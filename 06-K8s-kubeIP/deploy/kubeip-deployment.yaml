#  We need to get RBAC permissions first with
#  kubectl create clusterrolebinding cluster-admin-binding \
#    --clusterrole cluster-admin --user `gcloud config list --format 'value(core.account)'`

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeip
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeip
  template:
      metadata:
        labels:
          app: kubeip
      spec:
        priorityClassName: system-cluster-critical
        nodeSelector:
          cloud.google.com/gke-nodepool: default-pool
        containers:
        - name: "kubeip"
          image: doitintl/kubeip:latest
          imagePullPolicy: Always
          volumeMounts:
          - name: google-cloud-key
            mountPath: /var/secrets/google
          env:
          - name: "KUBEIP_LABELKEY"
            valueFrom:
              configMapKeyRef:
                key: "KUBEIP_LABELKEY"
                name: "kubeip-config"
          - name: "KUBEIP_LABELVALUE"
            valueFrom:
              configMapKeyRef:
                key: "KUBEIP_LABELVALUE"
                name: "kubeip-config"
          - name: "KUBEIP_NODEPOOL"
            valueFrom:
              configMapKeyRef:
                key: "KUBEIP_NODEPOOL"
                name: "kubeip-config"
          - name: "KUBEIP_FORCEASSIGNMENT"
            valueFrom:
              configMapKeyRef:
                key: "KUBEIP_FORCEASSIGNMENT"
                name: "kubeip-config"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/secrets/google/key.json
        restartPolicy: Always
        serviceAccountName: kubeip-sa
        volumes:
          - name: google-cloud-key
            secret:
              secretName: kubeip-key

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeip-sa
  namespace: kube-system

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeip-sa
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get","list","watch","patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get","list","watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeip-sa
subjects:
  - kind: ServiceAccount
    name: kubeip-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: kubeip-sa
  apiGroup: rbac.authorization.k8s.io
